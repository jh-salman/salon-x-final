import React, { useState } from 'react'
import { Crown } from 'phosphor-react';
import StatsCircle from './StatsCircle';
import CustomSlider from './Slider';

const SvgLogo = () => (
    <svg width="110" height="110" viewBox="0 0 817 832" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M773.5 489C777.95 494.665 783.5 504.5 783.5 504.5L777.5 543.5L745.5 602L615 593.5L581 579.5C581 579.5 584.802 576.936 587 575C589.799 572.534 590.975 570.746 593.5 568C600.238 560.67 604.571 556.999 610.5 549C618.259 538.532 621.891 531.986 627 520C630.632 511.48 634.5 497.5 634.5 497.5L640.5 495L666 481.5L686.5 466L742 471.5C742 471.5 752.129 474.644 758.5 477C761.051 477.943 762.658 478.117 765 479.5C769.287 482.031 770.425 485.085 773.5 489Z" fill="url(#paint0_linear_27_17)" />
        <path d="M592.499 780.5C563.177 795.71 545.522 802.13 513.999 812C493.028 818.566 481.125 822.099 459.499 826C444.388 828.726 435.84 830.35 420.499 831C400.553 831.845 389.174 830.883 369.499 827.5C356.43 825.253 348.321 825.508 336.499 819.5C329.739 816.064 326.141 813.566 320.499 808.5C314.937 803.505 311.323 800.697 307.999 794C303.873 785.689 303.551 779.73 304.499 770.5C305.433 761.406 307.101 755.878 312.499 748.5C320.45 737.632 325.456 734.398 338 729.5C359.094 721.264 377.354 723.953 399.999 724C419.061 724.04 429.65 726.659 448.499 729.5C464.594 731.926 473.361 734.874 489.499 737C519.141 740.905 550.964 741.172 565.999 740L604.499 737C619.534 735.828 626.143 732.559 639.499 728C653.816 723.114 662.094 720.393 674.999 712.5C689.652 703.538 708.499 684 708.499 684C708.499 684 696.06 701.021 686.999 711C673.525 725.839 664.862 733.248 648.999 745.5C628.457 761.365 615.539 768.549 592.499 780.5Z" fill="url(#paint1_linear_27_17)" />
        <path d="M118.5 724.001C150.081 758.539 219.5 788.501 219.5 788.501L190.5 734.501C190.5 734.501 171.535 695.172 179.5 671.501C185.599 653.374 195.675 645.443 211 634.001C236.956 614.621 259.126 615.099 291.5 614.001C330.701 612.672 351.625 625.804 389.5 636.001C423.255 645.088 441.18 653.657 475 662.501C523.682 675.232 551.182 686.609 601.5 687.001C633.714 687.252 652.905 688.089 683.5 678.001C711.31 668.831 728.066 661.977 749 641.501C765.299 625.558 773.777 614.453 781.5 593.001C788.564 573.381 788.479 560.848 788 540.001C787.67 525.643 783.5 503.501 783.5 503.501C783.5 503.501 781.5 525.001 773 542.001C773 542.001 766.911 555.941 755 570C743.089 584.059 711.415 590.816 692.5 593.001C651.815 597.7 631 590.001 588.5 579.501C546 569.001 520 559.002 475 539.001C430 519 423.872 514.299 392.5 498.501C358.322 481.289 340.959 467.493 304.5 456.501C277.144 448.253 261.068 444.025 232.5 443.501C207.921 443.05 193.711 444.513 170 451.001C149.819 456.523 137.921 459.912 120.5 471.501C97.8177 486.589 86.3911 499.24 74 523.501C54.9472 560.806 57.3927 589.614 66.5 630.501C75.584 671.283 90.306 693.167 118.5 724.001Z" fill="url(#paint2_linear_27_17)" />
        <path d="M18.0064 403C9.83765 392.983 5.79874 386.039 3.00023 373.5C-0.361012 358.44 5.50636 333.5 5.50636 333.5L18.0064 304L56.5064 230L155.006 208.5L240.006 245.5L239.006 247L221.506 266L204.006 289.5L187.506 319L178.506 345.5L169.506 387C169.506 387 172.422 395.585 169.506 399.5C168.431 400.944 166.006 402.5 166.006 402.5C166.006 402.5 160.5 407 160.006 407.5C159.513 408 142.941 416.947 132.006 423C132.006 423 113.315 431.411 100.506 433C87.6937 434.59 80.1462 433.632 67.5063 431C55.9588 428.596 49.1756 426.976 39.0064 421C29.694 415.527 24.8328 411.371 18.0064 403Z" fill="url(#paint3_linear_27_17)" stroke="black" />
        <path d="M798 286C785.356 247.126 751.005 193.5 751.005 193.5L758.505 235.5C758.505 235.5 759.505 256.5 756.005 269C752.505 281.5 745.911 292.314 733.505 301.5C720.698 310.983 710.371 312.018 694.505 313.5C668.429 315.936 653.885 306.564 629.505 297C592.741 282.578 576.886 264.873 544.005 243C507.018 218.396 489.929 198.907 451.005 177.5C411.416 155.727 390.104 141.476 347.005 129.5C309.621 119.112 287.257 114.565 248.505 116.5C215.651 118.141 196.626 119.112 165.505 129.5C145.118 136.305 134.036 141.611 115.505 152.5C96.716 163.54 86.515 170.715 70.5051 185.5C70.5051 185.5 42.0828 215.05 28.0051 237C16.4074 255.083 11.4008 266.343 5.50208 287C-2.91556 316.478 3.00001 377.5 3.00001 377.5C3.00001 377.5 6.02996 336.038 19.0051 314C34.6957 287.35 52.3456 277.334 80.0051 263.5C107.155 249.921 125.319 246.263 155.5 243C192.5 239 218.089 240.193 257 248C285.52 253.722 301.451 258.625 328.005 270.5C352.525 281.465 365.947 288.835 389.5 302C414.056 315.725 427.322 324.318 451.005 339.5C469.97 351.657 480.371 358.833 499 371.5C518.262 384.597 528.963 391.468 548 404.5C569.411 419.158 580.192 429.255 602.505 442.5C623.381 454.891 634.906 463.032 658.005 470.5C685.359 479.344 702.374 482.598 731.005 480C747.942 478.463 758.372 478.26 773.505 470.5C785.255 464.475 790.886 459.417 799 449C812.187 432.071 811.578 419.259 814.5 398C820.419 354.929 811.481 327.448 798.044 286.134L798 286Z" fill="url(#paint4_linear_27_17)" />
        <path d="M751.426 193.23C751.145 193.41 750.865 193.59 750.584 193.77C768.744 223.15 786.266 253.43 797.568 286.14C798.6 289.308 799.614 292.421 800.634 295.581C811.787 328.409 819.743 363.307 814.098 397.945C811.84 415.687 810.797 434.745 798.697 448.764C792.015 457.788 783.484 465.309 773.336 470.17C760.421 477.321 745.507 478.463 730.973 479.648C706.299 482.534 681.487 478.236 658.105 470.19C638.12 464.19 620.469 452.915 602.66 442.239C583.444 431.14 566.523 416.725 548.158 404.269C531.905 393.119 515.432 382.376 499.146 371.285C483.24 360.459 467.368 349.638 451.136 339.297C430.929 326.293 410.657 313.428 389.607 301.809C369.523 290.496 349.213 279.589 328.086 270.318C305.462 259.842 281.527 252.414 257.035 247.825C223.725 240.715 189.317 238.662 155.484 242.849C129.37 245.264 103.263 251.039 79.9458 263.382C55.8968 274.838 31.8607 289.836 18.9067 313.942C8.33779 333.387 5.11322 355.744 2.89996 377.493L3.09985 377.49C0.90462 347.45 -1.3719 316.581 5.58154 287.023C10.3267 269.266 17.876 252.343 28.0663 237.039C40.3588 218.451 55.337 201.775 70.5495 185.543C84.0907 172.69 99.3407 161.816 115.532 152.546C131.288 143.043 147.98 135.148 165.519 129.543C192.123 120.023 220.453 117.661 248.507 116.534C281.861 114.128 315.073 120.155 346.999 129.523C384.355 139.014 417.584 158.943 450.999 177.512C484.756 195.309 512.197 222.223 544.001 243.005C572.165 261.589 597.338 285.362 629.504 297.002C650.311 305.266 671.455 316.593 694.505 313.501C708.162 312.453 722.521 310.308 733.505 301.5C734.257 300.943 734.994 300.375 735.718 299.795C744.548 292.833 751.361 283.322 754.883 272.63C755.29 271.431 755.664 270.22 756.006 269C758.782 258.087 758.851 246.704 758.614 235.495L758.613 235.481C756.194 221.466 753.822 207.443 751.497 193.412C751.169 193.471 750.841 193.529 750.513 193.588C753.187 207.557 755.815 221.534 758.397 235.519L758.396 235.505C758.763 246.693 758.767 258.085 756.004 269C755.663 270.22 755.29 271.431 754.883 272.63C751.361 283.322 744.548 292.833 735.718 299.795C734.994 300.375 734.257 300.943 733.505 301.5C722.52 310.308 708.162 312.452 694.505 313.499C671.455 316.59 650.312 305.263 629.506 296.998C597.341 285.356 572.171 261.582 544.008 242.995C512.207 222.21 484.769 195.293 451.012 177.488C417.601 158.916 384.371 138.977 347.011 129.477C315.088 120.104 281.864 114.067 248.503 116.466C220.452 117.586 192.104 119.941 165.491 129.457C147.947 135.058 131.238 142.955 115.478 152.454C99.2832 161.72 84.0141 172.6 70.4632 185.455C55.2379 201.69 40.2549 218.359 27.9438 236.961C17.7448 252.264 10.1747 269.217 5.42262 286.977C-1.55374 316.592 0.71742 347.449 2.90016 377.51L3.10005 377.507C5.317 355.787 8.56241 333.425 19.1035 314.058C32.0505 290 56.0046 275.07 80.0643 263.618C103.369 251.299 129.404 245.554 155.516 243.151C189.335 238.984 223.674 241.052 256.965 248.175C281.449 252.777 305.316 260.199 327.924 270.682C349.036 279.961 369.313 290.865 389.393 302.191C410.428 313.819 430.673 326.685 450.875 339.703C467.096 350.052 482.952 360.878 498.854 371.715C515.137 382.82 531.602 393.573 547.842 404.731C566.166 417.176 583.098 431.62 602.35 442.761C620.12 453.43 637.856 464.775 657.905 470.81C681.285 478.881 706.3 483.234 731.037 480.352C745.519 479.184 760.645 478.036 773.674 470.829C783.872 465.967 792.609 458.278 799.303 449.236C811.552 435.081 812.645 415.678 814.902 398.055C820.604 363.298 812.618 328.133 801.49 295.305C800.472 292.142 799.46 289.028 798.432 285.86C787.096 252.973 769.598 222.695 751.426 193.23Z" fill="black" />
        <path d="M232.151 60.9579C233.09 50.0479 238.308 44.05 246.651 36.9579C256.109 28.9188 276.651 26.4579 276.651 26.4579H319.651C319.651 26.4579 352.111 20.9276 371.651 26.4579C396.529 33.4992 425.151 65.4579 425.151 65.4579L450.151 89.4579L465.651 111.458C465.651 111.458 438.458 104.48 420.651 102.458C396.787 99.7477 383.168 102.458 359.151 102.458C333.572 102.458 319.118 104.85 293.651 102.458C278.117 100.999 267.641 104.297 254.151 96.4579C246.383 91.944 241.628 88.747 237.151 80.9579C233.139 73.9781 231.461 68.9792 232.151 60.9579Z" fill="url(#paint5_linear_27_17)" stroke="url(#paint6_linear_27_17)" />
        <path d="M394 1.50733C334.439 3.09578 245.5 36.5073 245.5 36.5073C245.5 36.5073 341.028 27.6389 394 52.0073C433.755 70.2958 447.357 94.6353 481.5 122.007C529.395 160.405 550.5 194 603.5 221C656.5 248 690.5 251.001 710.5 218C730.5 184.999 707 141.498 684.5 115.499C662 89.5 561.5 33 561.5 33C561.5 33 461.184 -0.284433 394 1.50733Z" fill="url(#paint7_linear_27_17)" stroke="url(#paint8_linear_27_17)" stroke-width="2" />
        <path d="M321 812.5C326.089 815.732 335 819 335 819C335 819 329.7 815.822 326.5 813.5C323.243 811.136 318.5 807 318.5 807C318.5 807 311.953 801.601 310 797.5L305 787C303.048 782.899 304 776 304 776L306 762C306.781 756.533 311.016 748.875 317 742.5C321.491 737.716 324.768 735.691 330.5 732.5C339.946 727.243 346.333 726.251 357 724.5C367.22 722.822 383.5 723.5 383.5 723.5C383.5 723.5 403.358 723.312 416 724.5C429.392 725.758 435.551 727.462 450 730L487 736.5C501.45 739.038 513.161 739.47 530 740C545.029 740.473 568.5 739.5 568.5 739.5C568.5 739.5 601.666 738.839 622 733.5C631.974 730.881 637.437 728.857 647 725C659.715 719.872 667.031 717.012 678.5 709.5C690.548 701.609 706.5 685.5 706.5 685.5C706.5 685.5 687.167 701.864 673 709.5C655.171 719.111 643.733 721.933 624 726.5C610.333 729.663 602.482 730.845 588.5 732C572.349 733.334 563.207 734.343 547 732L505.5 726C489.294 723.657 486.99 723.135 475 721C466.056 719.407 461.017 717.496 452 715.5C443.438 713.605 438.633 712.545 430 711C419.508 709.122 413.602 708.105 403 707C394.629 706.128 389.916 705.367 381.5 705.5C374.642 705.609 370.792 706.04 364 707C354.899 708.287 349.679 708.971 341 712L340.945 712.019C332.569 714.943 327.615 716.673 320.5 722C314.421 726.553 311.114 729.615 307 736C300.943 745.402 300.005 752.361 299 763.5C298.192 772.465 297.775 777.921 300.5 786.5C302.884 794.002 310.5 804 310.5 804C310.5 804 316.547 809.672 321 812.5Z" fill="#E779E0" />
        <defs>
            <linearGradient id="paint0_linear_27_17" x1="682.25" y1="466" x2="682.25" y2="602" gradientUnits="userSpaceOnUse">
                <stop stop-color="#680037" />
                <stop offset="1" stop-color="#370030" />
            </linearGradient>
            <linearGradient id="paint1_linear_27_17" x1="427.5" y1="709" x2="506.278" y2="831.289" gradientUnits="userSpaceOnUse">
                <stop stop-color="#6F0162" />
                <stop offset="1" stop-color="#6E0144" />
            </linearGradient>
            <linearGradient id="paint2_linear_27_17" x1="315" y1="462.5" x2="453.5" y2="717.5" gradientUnits="userSpaceOnUse">
                <stop stop-color="#7B37C7" />
                <stop offset="1" stop-color="#8D0765" />
            </linearGradient>
            <linearGradient id="paint3_linear_27_17" x1="120.984" y1="208.5" x2="96" y2="434" gradientUnits="userSpaceOnUse">
                <stop stop-color="#2D012D" />
                <stop offset="1" stop-color="#590040" />
            </linearGradient>
            <linearGradient id="paint4_linear_27_17" x1="408.671" y1="116.064" x2="482" y2="437.5" gradientUnits="userSpaceOnUse">
                <stop stop-color="#7557EC" />
                <stop offset="1" stop-color="#99048E" />
            </linearGradient>
            <linearGradient id="paint5_linear_27_17" x1="348.826" y1="24" x2="348.826" y2="111.458" gradientUnits="userSpaceOnUse">
                <stop stop-color="#4E043C" />
                <stop offset="1" stop-color="#260126" />
            </linearGradient>
            <linearGradient id="paint6_linear_27_17" x1="348.826" y1="24" x2="348.826" y2="111.458" gradientUnits="userSpaceOnUse">
                <stop stop-color="#951C33" />
                <stop offset="1" stop-color="#2F0910" />
            </linearGradient>
            <linearGradient id="paint7_linear_27_17" x1="480.754" y1="1.4375" x2="480.754" y2="242.008" gradientUnits="userSpaceOnUse">
                <stop stop-color="#7998EC" />
                <stop offset="1" stop-color="#7233BF" />
            </linearGradient>
            <linearGradient id="paint8_linear_27_17" x1="480.754" y1="1.4375" x2="480.754" y2="242.008" gradientUnits="userSpaceOnUse">
                <stop stop-color="#EAEAEA" />
                <stop offset="0.9999" stop-color="#838383" />
                <stop offset="1" stop-color="#9D8EDD" />
            </linearGradient>
        </defs>
    </svg>

)
const SvgCircle = () => {
    return (
        <>
            <div style={{
                display: 'flex',
                alignItems: 'center',
                justifyContent: 'center',
                width: '80px',
                height: '80px',
                position: 'relative'
            }}>
                <div style={{
                    // animation: 'spin 4s ease-in-out infinite',
                    // transformOrigin: 'center center',
                    position: 'absolute',
                    top: -25,
                    left: -20,
                    // width: '80px',
                    // height: '80px',
                    filter: 'drop-shadow(0 0 8px rgba(255, 73, 127, 0.8))'
                }}>
                    {/* <svg width="80" height="80" viewBox="0 0 100 100" xmlns="http://www.w3.org/2000/svg">
                        <circle
                            cx="50"
                            cy="50"
                            r="45"
                            fill="url(#gradient)"
                        />
                        <defs>
                            <linearGradient id="gradient" x1="0" y1="0" x2="100" y2="100" gradientUnits="userSpaceOnUse">
                                <stop offset="0%" stopColor="#FB9578" />
                                <stop offset="60%" stopColor="#E74880" />
                                <stop offset="100%" stopColor="#9C0047" />
                            </linearGradient>
                        </defs>
                    </svg> */}

                    <img style={{
                        animation: 'spin 8s infinite',
                        transformOrigin: 'center center',
                        position: 'absolute',
                        top: 0,
                        left: 0,
                        width: '125px',
                        height: '125px'
                    }} src='./spincircle.png' />
                </div>
            </div>
            <style>
                {`
                    @keyframes spin {
                        0% { transform: rotate(0deg); }
                        100% { transform: rotate(360deg); }
                    }
                `}
            </style>
        </>
    );
}

const TopStats = () => {
    const pinkColor = "#FF1493"
    // Only initialize sliderValue once, do not reset it inadvertently
    const [sliderValue, setSliderValue] = useState(50)
    return (
        <div style={{ position: "relative", margin: '0 auto', textAlign: 'center' }}>
            <div style={{ marginBottom: '', zIndex: "10", position: "absolute", top: "15%", left: "30%" }}>
                {/* <input
                    type="range"
                    min="0"
                    max="100"
                    value={sliderValue}
                   
                    style={{ width: '100%', accentColor: '#FF1493' }}
                /> */}
                <CustomSlider
                    value={sliderValue}
                    onChange={(e) => {
                        if (!e || !e.target) return;
                        const newValue = Number(e.target.value);
                        if (!isNaN(newValue)) {
                            setSliderValue(newValue);
                        }
                    }}
                />

            </div>
            <div style={{ width: "370px", height: "210px", position: 'relative' }}>
                <div style={{ position: 'absolute', top: '40%', left: "0%" }}>
                    <StatsCircle value={sliderValue} label="Revenue" color={pinkColor} />
                </div>
                <div style={{ position: 'absolute', bottom: '-15%', left: "0" }}>
                    <StatsCircle value={sliderValue} label="Retail" color={pinkColor} />
                </div>
                <div className="right-circle retention" style={{ position: 'absolute', top: '40%', right: "10%" }}>
                    <StatsCircle value={sliderValue} label="Retention" color={pinkColor} />
                </div>
                <div className="right-circle service" style={{ position: 'absolute', bottom: '-15%', right: "10%" }}>
                    <StatsCircle value={sliderValue} label="Service" color={pinkColor} />
                </div>

                <style>
                    {`
  @media (min-width: 360px) and (max-width: 380px) {
    .right-circle.retention {
      right: 17% !important; /* 10% থেকে 30px বেশি ডানে সরানো মানে বামে সরানো */
    }
    .right-circle.service {
      right:17% !important;
    }
      .move-left-responsive {
      left: 40% !important; /* 45% থেকে 5% বামে সরানো */
    }
  }
`}
                </style>
                <div className="move-left-responsive"  style={{
                    position: 'absolute',
                    top: '78%',
                    left: '45%',
                    transform: 'translate(-50%, -50%)',
                    width: 90,
                    height: 90,
                    display: 'flex',
                    alignItems: 'center',
                    justifyContent: 'center',
                    flexDirection: 'column'
                }}>
                    <div style={{ height: 160, display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center' }}>
                        {(sliderValue / 20).toFixed(2) >= 4.5 ? (
                            <Crown size={21} color="#FFD700" weight="fill" />
                        ) : (
                            <div style={{ height: 21 }} />
                        )}
                        <div onClick={() => window.location.href = '/screen3'}>
                            <SvgLogo />
                        </div>
                        <div style={{
                            position: 'absolute',
                            top: -10,
                            left: 0,
                            width: '100%',
                            height: '100%',
                            display: 'flex',
                            alignItems: 'center',
                            justifyContent: 'center',
                            zIndex: -1
                        }}>
                            <SvgCircle />
                        </div>
                    </div>
                    <div style={{ color: '#50E3FF', fontSize: 8.25, fontWeight: 'bold', marginTop: 8 }}>Tiffany Styles</div>
                    <div style={{ color: '#50E3FF', fontSize: 13.5, fontWeight: 'bold', marginTop: 4 }}>
                        {(sliderValue / 20).toFixed(2)}
                    </div>
                </div>
            </div>
        </div>
    )
}

export default TopStats


